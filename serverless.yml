service: discretionary-business-grants

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage}
#  environment:
#    PLANS_TABLE: '${self:service}-${self:provider.stage}-plans'

package:
  individually: true
  exclude:
    - ./**

functions:
  discretionary-business-grants:
    name: ${self:service}-${self:provider.stage}
    handler: lambda.handler
    package:
      include:
        - lambda.js
        - next.config.js
        - pages/**
        - public/**
        - build/_next/**
        - node_modules/**
    events:
      - http:
          path: api/{proxy+}
          method: ANY
#          authorizer: ${self:custom.authorizer.${self:service}-authorizer}
      - http: ANY /
      - http: ANY /{proxy+}
    environment:
      ENV: ${self:provider.stage}
#      ALLOWED_GROUPS: 'housingneeds-singleview-beta'
#      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}
#      PLANS_TABLE_NAME: ${self:provider.environment.PLANS_TABLE}

#  hn-shared-plan-authorizer:
#    name: ${self:service}-authorizer-${self:provider.stage}
#    handler: authorizer.handler
#    package:
#      include:
#        - authorizer.js
#        - node_modules/**
#    environment:
#      ALLOWED_GROUPS: 'housingneeds-singleview-beta'
#      JWT_SECRET: ${ssm:/common/hackney-jwt-secret}

resources:
  Resources:
    discretionaryBusinessGrantsDbSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Access to Postgres
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0

    discretionaryBusinessGrantsDb:
      Type: "AWS::RDS::DBInstance"
      Properties:
        DBInstanceIdentifier: "discretionary-business-grants-db-${self:provider.stage}"
        DBName: "discretionaryBusinessGrantsDb"
        AllocatedStorage: 5
        DBInstanceClass: "db.t2.micro"
        Engine: "postgres"
        EngineVersion: "11.7"
        MasterUsername: ${env:MASTER_USERNAME}
        MasterUserPassword: ${env:MASTER_USER_PASSWORD}
        VPCSecurityGroups:
        - Fn::GetAtt:
          - discretionaryBusinessGrantsDbSecurityGroup
          - GroupId
        Tags:
          -
            Key: "Name"
            Value: "discretionaryBusinessGrantsDb"
      DeletionPolicy: "Snapshot"

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificate-arn.${self:provider.stage}}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only

custom:
#  authorizer:
#    hn-shared-plan-authorizer:
#      name: ${self:service}-authorizer
#      type: request
#      identitySource: ''
#      resultTtlInSeconds: 0
  domain-name:
    Fn::Join:
      - '.'
      - - Ref: ApiGatewayRestApi
        - execute-api
        - eu-west-2
        - amazonaws.com
  aliases:
    staging: staging-discretionarybusinessgrants.hackney.gov.uk
    production: discretionarybusinessgrants.hackney.gov.uk
  certificate-arn:
    staging: arn:aws:acm:us-east-1:715003523189:certificate/349e1bba-23db-497a-9254-b04e52fce1c8
    production: arn:aws:acm:us-east-1:153306643385:certificate/61426264-5aa6-4b42-b2cb-c10ff7619a38

